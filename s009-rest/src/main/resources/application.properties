spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
#debug=true
#logging.level.org.springframework=debug
logging.level.com.example=debug
#spring.jpa.properties.hibernate.format_sql=true
spring.main.banner-mode=off
#logging.level.org.springframework.transaction=trace
#logging.level.org.springframework.orm.jpa=trace
#logging.level.org.hibernate.sql=debug
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
# 1 - ignorar propiedades con @JsonIgnore
# 2 - crear queries custom para traer los datos necesarios con join fetch
# 3 - Crear DTO
# spring.jpa.open-in-view=false